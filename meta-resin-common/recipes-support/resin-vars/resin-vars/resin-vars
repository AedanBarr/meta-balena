#!/bin/sh

tmpcachefile=/tmp/os-vars

if [ -f "$tmpcachefile" ]; then
    . "$tmpcachefile"
fi

help () {
    cat << EOF
Script for setting resin shell environment
resin-vars [options]

Options:
    -h, --help
        Display this help and exit.

    -c, --config-path CONFIG_PATH
        Use a non default config.json file.
        Default: /mnt/boot/config.json
EOF
}

# Parse arguments
while [ "$#" -gt "0" ]; do
    key=$1
    case $key in
        -h|--help)
            help
            exit 0
            ;;
        -c|--config-path)
            CONFIG_PATH=$2
            shift
            ;;
        *)
            echo "[WARNING] $0 : Argument '$1' unknown. Ignoring."
            ;;
    esac
    shift
done

# Resin-boot mountpoint
BOOT_MOUNTPOINT="/mnt/boot"
FLASHER_FILEFLAG="$BOOT_MOUNTPOINT/resin-image-flasher"

# Default values
if [ -z "$CONFIG_PATH" ]; then
    if [ -f "$FLASHER_FILEFLAG" ]; then
        # Flasher stores a volatile file in tmpfs
        CONFIG_PATH=/mnt/boottmp/config.json
    else
        CONFIG_PATH=$BOOT_MOUNTPOINT/config.json
    fi
fi

RESIN_BOOT_MOUNTPOINT="/mnt/boot"

# If config.json provides redefinitions for our vars let us rewrite their
# runtime value
if [ -f $CONFIG_PATH ]; then
    eval "$(jq -r '@sh "
         API_ENDPOINT=\(.apiEndpoint // "")
         LISTEN_PORT=\(.listenPort // "")
         MIXPANEL_TOKEN=\(.mixpanelToken // "")
         PUBNUB_PUBLISH_KEY=\(.pubnubPublishKey // "")
         PUBNUB_SUBSCRIBE_KEY=\(.pubnubSubscribeKey // "")
         REGISTRY_ENDPOINT=\(.registryEndpoint // "")
         VPN_ENDPOINT=\(.vpnEndpoint // "")
         VPN_PORT=\(.vpnPort // "")
         DELTA_ENDPOINT=\(.deltaEndpoint // "")
         CONFIG_HOSTNAME=\(.hostname // "")
         PERSISTENT_LOGGING=\(.persistentLogging // "")
         COUNTRY=\(.country // "")
         UUID=\(.uuid // "")
         PROVISIONING_API_KEY=\(.apiKey // "")
         DEVICE_API_KEY=\(.deviceApiKey // "")
         DEVICE_ID=\(.deviceId // "")
         USER_ID=\(.userId // "")
         APPLICATION_ID=\(.applicationId // "")
         DEVICE_TYPE=\(.deviceType // "")
         REGISTERED_AT=\(.registered_at // "")
         NTP_SERVERS=\(.ntpServers // "")
         DNS_SERVERS=\(.dnsServers // "")
         BALENA_ROOT_CA=\(.balenaRootCA // "")
         "' $CONFIG_PATH)"

    # Various default values
    PERSISTENT_LOGGING=${PERSISTENT_LOGGING:-false}
    VPN_PORT=${VPN_PORT:-443}
    if [ "$VPN_PORT" = "1723" ]; then
        # There is a bug in the cli which defaults VPN port to this port.
        # If this was found in the config assume default 443.
        VPN_PORT=443
    fi
    DNS_SERVERS=${DNS_SERVERS:-8.8.8.8}
    # Don't propagate the `null` value further to dnsmasq configuration
    if [ "$DNS_SERVERS" = "null" ]; then
        DNS_SERVERS=""
    fi
else
    echo "[WARNING] $0 : '$CONFIG_PATH' not found."
fi

# Save environment variables in a cache
echo "BOOT_MOUNTPOINT=\""""$BOOT_MOUNTPOINT""\" > $tmpcachefile
echo "FLASHER_FILEFLAG=\""""$FLASHER_FILEFLAG""\" >> $tmpcachefile
echo "CONFIG_PATH=\""""$CONFIG_PATH""\" >> $tmpcachefile
echo "RESIN_BOOT_MOUNTPOINT=\""""$RESIN_BOOT_MOUNTPOINT""\" >> $tmpcachefile
echo "API_ENDPOINT=\""""$API_ENDPOINT""\" >> $tmpcachefile
echo "LISTEN_PORT=\""""$LISTEN_PORT""\" >> $tmpcachefile
echo "MIXPANEL_TOKEN=\""""$MIXPANEL_TOKEN""\" >> $tmpcachefile
echo "PUBNUB_PUBLISH_KEY=\""""$PUBNUB_PUBLISH_KEY""\" >> $tmpcachefile
echo "PUBNUB_SUBSCRIBE_KEY=\""""$PUBNUB_SUBSCRIBE_KEY""\" >> $tmpcachefile
echo "REGISTRY_ENDPOINT=\""""$REGISTRY_ENDPOINT""\" >> $tmpcachefile
echo "VPN_ENDPOINT=\""""$VPN_ENDPOINT""\" >> $tmpcachefile
echo "VPN_PORT=\""""$VPN_PORT""\" >> $tmpcachefile
echo "DELTA_ENDPOINT=\""""$DELTA_ENDPOINT""\" >> $tmpcachefile
echo "CONFIG_HOSTNAME=\""""$CONFIG_HOSTNAME""\" >> $tmpcachefile
echo "PERSISTENT_LOGGING=\""""$PERSISTENT_LOGGING""\" >> $tmpcachefile
echo "COUNTRY=\""""$COUNTRY""\" >> $tmpcachefile
echo "UUID=\""""$UUID""\" >> $tmpcachefile
echo "PROVISIONING_API_KEY=\""""$PROVISIONING_API_KEY""\" >> $tmpcachefile
echo "DEVICE_API_KEY=\""""$DEVICE_API_KEY""\" >> $tmpcachefile
echo "DEVICE_ID=\""""$DEVICE_ID""\" >> $tmpcachefile
echo "USER_ID=\""""$USER_ID""\" >> $tmpcachefile
echo "APPLICATION_ID=\""""$APPLICATION_ID""\" >> $tmpcachefile
echo "DEVICE_TYPE=\""""$DEVICE_TYPE""\" >> $tmpcachefile
echo "REGISTERED_AT=\""""$REGISTERED_AT""\" >> $tmpcachefile
echo "NTP_SERVERS=\""""$NTP_SERVERS""\" >> $tmpcachefile
echo "DNS_SERVERS=\""""$DNS_SERVERS""\" >> $tmpcachefile
echo "BALENA_ROOT_CA=\""""$BALENA_ROOT_CA""\" >> $tmpcachefile
