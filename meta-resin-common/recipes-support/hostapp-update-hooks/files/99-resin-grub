#!/bin/sh

#
# Script which configures the grub.cfg to use an updated root index
#

set -o errexit

. /usr/sbin/resin-vars

verifyMd5sum() {
  if [ "$1" = "$3" ] ; then return 1; fi
}

getSize() {
  echo $(du -sb "$1" | awk '{print $1}')
}

DURING_UPDATE=${DURING_UPDATE:-0}

if [ "$DURING_UPDATE" = "1" ]; then
    SYSROOT="/mnt/sysroot/inactive"
else
    SYSROOT="/mnt/sysroot/active"
fi

new_part=$(findmnt --noheadings --canonicalize --output SOURCE $SYSROOT)
new_part_label=$(blkid "$new_part" | awk '{print $2}' | cut -d'"' -f 2)

# flash legacy grub only if we do not support UEFI
if [ ! -d /sys/firmware/efi ] ; then
    # Remove EFI
    rm -rf "$RESIN_BOOT_MOUNTPOINT/EFI" || true

    MBR=512
    reservedMBR=66
    sourcePath="/resin-boot/grub/"
    device="/dev/$(findmnt --noheadings --canonicalize --output SOURCE /mnt/sysroot/active | xargs lsblk -no pkname)"

    firstBootloader=boot.img
    secondBootloader=core.img

    md5sum_diskFirstBootloader=$(dd if=$device bs=1 count=$(getSize "$sourcePath$firstBootloader") | md5sum)
    md5sum_diskSecondBootloader=$(dd if=$device skip=$MBR bs=1 count=$(getSize "$sourcePath$secondBootloader") | md5sum)

    if verifyMd5sum $(md5sum $sourcePath$firstBootloader) $md5sum_diskFirstBootloader; then
        dd if="$sourcePath$firstBootloader" of="$device" conv=fdatasync bs=1 count=$(expr $MBR - $reservedMBR)
    fi
    if verifyMd5sum $(md5sum $sourcePath$secondBootloader) $md5sum_diskSecondBootloader; then
        dd if="$sourcePath$secondBootloader" of="$device" conv=fdatasync bs=1 seek=$MBR
    fi
else
    # Remove legacy grub
    rm -rf "$RESIN_BOOT_MOUNTPOINT/grub" || true
fi

printf "[INFO] Switching root partition to %s..." "$new_part_label..."
grub_cfg=$(find /mnt/boot/ -name grub.cfg)
sed "s/resin-root./"$new_part_label"/" "$grub_cfg" > "$grub_cfg".new

sync -f $(dirname "$grub_cfg")
mv "$grub_cfg".new "$grub_cfg"
sync -f $(dirname "$grub_cfg")
printf " done.\n"
